{{- $hostname := "http://localhost" -}}
{{- $httpport := "<port-local>" -}}
{{- $ssl := "False" -}}
{{- if or (.Values.ingress).enabled (.Values.route).enabled -}}
{{-   $hostname = include "library-chart.service-url" . -}}
{{-   $httpport = "80" -}}
{{-   if or (.Values.route).enabled (.Values.ingress).tls -}}
{{-     $httpport = "443" -}}
{{-     $ssl = "True" -}}
{{-   end -}}
{{- end -}}

### Access

{{ if not (or (.Values.ingress).enabled (.Values.route).enabled) -}}
Enable access to your service using port forwarding:
```bash
kubectl port-forward service/{{ include "chart.fullname" .Subcharts.chromadb }} <port-local>:{{ .Values.chromadb.chromadb.serverHttpPort }}
```
{{ else -}}
Your service is available at the following URI:
- {{ $hostname }}
{{ end -}}

{{- if .Values.chromadb.chromadb.auth.enabled }}
Authentication:
{{- if eq .Values.chromadb.chromadb.auth.type "token" }}
- Your token: **{{ .Values.chromadb.chromadb.auth.token.value }}**
{{- else }}
- Your username: **{{ .Values.chromadb.chromadb.auth.basic.username }}**
- Your password: **{{ .Values.chromadb.chromadb.auth.basic.password }}**
{{- end }}
{{- else }}
Access to your service is not authenticated.
{{- end }}

<details>
  <summary> Environment variable setup </summary>
Configure the access to your service using environment variables:
```bash
export CHROMA_SERVER_HOST={{ $hostname }}
export CHROMA_SERVER_HTTP_PORT={{ $httpport }}
export CHROMA_SERVER_SSL_ENABLED={{ $ssl }}

{{- if .Values.chromadb.chromadb.auth.enabled }}
{{- if eq .Values.chromadb.chromadb.auth.type "token" }}
export CHROMA_CLIENT_AUTH_CREDENTIALS=$(kubectl get secret chromadb-auth -o jsonpath="{.data.token}" | base64 -d)
export CHROMA_CLIENT_AUTH_PROVIDER=chromadb.auth.token_authn.TokenAuthClientProvider
export CHROMA_AUTH_TOKEN_TRANSPORT_HEADER={{ .Values.chromadb.chromadb.auth.token.headerType }}
{{- else }}
export CHROMA_CLIENT_AUTH_USERNAME=$(kubectl get secret chromadb-auth -o jsonpath="{.data.username}" | base64 -d)
export CHROMA_CLIENT_AUTH_PASSWORD=$(kubectl get secret chromadb-auth -o jsonpath="{.data.password}" | base64 -d)
export CHROMA_CLIENT_AUTH_CREDENTIALS="${CHROMA_CLIENT_AUTH_USERNAME}:${CHROMA_CLIENT_AUTH_PASSWORD}"
export CHROMA_CLIENT_AUTH_PROVIDER=chromadb.auth.basic_authn.BasicAuthClientProvider
{{- end }}
{{- end }}
```
</details>


### Clients

<details>
  <summary> Python client </summary>
Install the ChromaDB client library first:
```bash
uv pip install chromadb-client==0.6.3
```

Environment variables are then automatically used for authentication:
```python
import os
import chromadb
from chromadb.config import Settings

# Setup client using environment variables
client = chromadb.HttpClient(
    host=os.getenv("CHROMA_SERVER_HOST"),
    port=int(os.getenv("CHROMA_SERVER_HTTP_PORT")),
    settings=Settings()
)

# Create a dummy collection
client.get_or_create_collection("test", metadata={"key": "value"})

# Print out all existing collections
print("This should print ['test']:", client.list_collections())
```
</details>
