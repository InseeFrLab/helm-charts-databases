global:
  kibanaEnabled: true
  security:
    allowInsecureImages: true
elasticsearch:
  image:
    registry: docker.io
    repository: bitnamilegacy/elasticsearch
    tag: 8.17.1-debian-12-r4
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
  sysctlImage:
    enabled: false
  copyTlsCerts:
    image:
      repository: bitnamilegacy/os-shell

  fullnameOverride: elastic-elasticsearch

  ingress:
    enabled: false

  security:
    enabled: true
    elasticPassword: "changeme"
    tls:
      autoGenerated: true

  volumePermissions:
    image: 
      repository: bitnamilegacy/os-shell

  kibana:
    image:
      tag: 8.16.1-debian-12-r0
      repository: bitnamilegacy/kibana
    elasticsearch:
      security:
        auth:
          enabled: true
          # default in the elasticsearch chart is elastic
          #kibanaUsername: "elastic" #-- not used since v8.0
          kibanaPassword: "changeme"
          createSystemUser: true
          #existingSecret: elastic-elasticsearch
          elasticsearchPasswordSecret: "elastic-elasticsearch"
        tls:
          # Instruct kibana to connect to elastic over https
          enabled: true
          # Bit of a catch 22, as you will need to know the name upfront of your release
          existingSecret: "elastic-elasticsearch-coordinating-crt"
          # As the certs are auto-generated, they are pemCerts so set to true
          usePemCerts: true
    extraConfiguration:
      monitoring.ui.ccs.enabled: false
    tls:
      enabled: true
      # AutoGenerate TLS certs for kibana
      autoGenerated: true

    resourcesPreset: medium
    volumePermissions:
      image: 
        repository: bitnamilegacy/os-shell
        
discovery:
  allow: true

ingress:
  enabled: true
  ingressClassName: ""
  tls: true
  hostname: "chart-example.local"
  usecertManager: false
  certManagerClusterIssuer: ""
  annotations: []

ingressKibana:
  enabled: true
  ingressClassName: ""
  tls: true
  hostname: "chart-example-2.local"
  usecertManager: false
  certManagerClusterIssuer: ""
  annotations: []


security:
  allowlist:
    enabled: false

route:
  enabled: false
  annotations: []
    # route.openshift.io/termination: "reencrypt"
  hostname: chart-example.local
  tls:
    termination: edge
    # key:
    # certificate:
    # caCertificate:
    # destinationCACertificate:
  wildcardPolicy: None

routeKibana:
  enabled: false
  annotations: []
    # route.openshift.io/termination: "reencrypt"
  hostname: chart-example-kibana.local
  tls:
    termination: edge
    # key:
    # certificate:
    # caCertificate:
    # destinationCACertificate:
  wildcardPolicy: None

userPreferences:
  language: "en"
