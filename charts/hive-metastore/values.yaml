# Default values for postgres.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  security:
    allowInsecureImages: true
  postgresql:
    auth:
      username: "admin"
      password: "changeme"
      database: "metastore"

replicaCount: 1

service:
  image:
    version: "inseefrlab/jupyter-datascience:py3.9.12-spark3.2.1-v0.0.2"
    pullPolicy: IfNotPresent
    custom:
      enabled: false
      version: "inseefrlab/jupyter-datascience:py3.9.12-spark3.2.1-v0.0.2"
  warehouseDir: s3a://bucket/hive-warehouse

environment:
  s3: true

s3:
  # Specifies whether a config map should be created
  enabled: false
  # The name of the configmap to use.
  # If not set and create is true, a name is generated using the fullname template
  configMapName: ""
  accessKeyId: ""
  endpoint: ""
  defaultRegion: ""
  secretAccessKey: ""
  sessionToken: ""

discovery:
  enabled: true

security:
  networkPolicy:
    enabled: true

postgresql:
  image:
    tag: "12"
    repository: "bitnamilegacy/postgresql"
  fullnameOverride: "hive-metastore-db"

listener:
  enabled: false
  className: org.pengfei.hive.listener.CustomHiveListener
  kafkaBrokerUrl: kafka-0.kafka-headless:9092
  kafkaTopicName: hive-meta
  domainNamespace: user-pengfei
  jarPath: /opt/hive/lib/hive-listener.jar

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "hive-metastore"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

networking:
  type: ClusterIP
  port: 9083

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
